{
	
	"isVerbose":false,
	
	// All paths are relative to this file!!!
	// Trailing and leading slashes are not needed!
	"paths":{
		// The path where to find the platform JSON files.
		// Those files define the features and which files belong to each of them.
		"platforms": "platforms",
	
		// Where can the source code be found.
		"source":"features",
		
		// Where shall the built files be put.
		"build":"dist"
	},
	
	"build":{
		// How to create the final file name for the built file.
		// You can use "PROFILE" and "PLATFORM" as variables, like so:
		// 		buildFileName:"embed-${PROFILE}-${PLATFORM}"
		// the ${} surrounds the varibales.
		// The final files may look like so:
		// 		embed-kitchensink-android.js
		// you can see the ".js" gets added automatically at the end.
		"fileName":"embed-${PROFILE}-${PLATFORM}",
		
		// If you also want to generate the uncompressed file set the
		// following option to true.
		// This may result in a file like:
		// 		embed-kitchensink-android.uncompressed.js
		"generateUncompressedFiles":true
	},
    
    // Templating. In the paths below, you MUST NOT use "..". However, 
    // you MAY use the ${PROFILE} and ${PLATFORM} variables.
    "templates": {
        
        // Where the template file resides.
        "templatePath": "templates",
        
        // Where the replacement files reside.
        "replacementPath": "templates",
        
        // Where the files for the unbuild js code (using script tags) should be put.
        "developmentOutput": "tests/${PROFILE}",
        
        // The name of the template. A ".tpl" suffix will be appended to it.
        "templateName": "index"
        
    },
	
	"defaults":{
		// If no profile is given explicitly as a parameter in the build process
		// the following is used as the default parameter.
		"profile":"default",
		
		// The default if no platform is given during the buold process.
		"platform":"desktop"
	},
	
	// Each profile defines a set of features which will be build
	// in order to do that the dependencies need to be resolved and
	// this is done using the sourcePath to find the dependencies etc.
	"profiles":{
    
        // kitchensink is the full-blown build of EmbedJS, including every existing feature.
		"default":[
			"baseFeature", "featureOne"
		],
        
		"extended":[
			"baseFeature", "featureOne", "featureTwo"
		]
    }
}